/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    'artist-type': ArtistType;
    members: Member;
    'portfolio-list': PortfolioList;
    priceList: PriceList;
    users: User;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    'artist-type': ArtistTypeSelect<false> | ArtistTypeSelect<true>;
    members: MembersSelect<false> | MembersSelect<true>;
    'portfolio-list': PortfolioListSelect<false> | PortfolioListSelect<true>;
    priceList: PriceListSelect<false> | PriceListSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    general: General;
    home: Home;
    commission: Commission;
    'artist-text': ArtistText;
    'portfolio-text': PortfolioText;
    contact: Contact;
    terms: Term;
  };
  globalsSelect: {
    general: GeneralSelect<false> | GeneralSelect<true>;
    home: HomeSelect<false> | HomeSelect<true>;
    commission: CommissionSelect<false> | CommissionSelect<true>;
    'artist-text': ArtistTextSelect<false> | ArtistTextSelect<true>;
    'portfolio-text': PortfolioTextSelect<false> | PortfolioTextSelect<true>;
    contact: ContactSelect<false> | ContactSelect<true>;
    terms: TermsSelect<false> | TermsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "artist-type".
 */
export interface ArtistType {
  id: string;
  title?: string | null;
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "members".
 */
export interface Member {
  id: string;
  name?: string | null;
  title?: string | null;
  /**
   * Show artist in order (Ascending) on their corresponding tabs
   */
  order?: number | null;
  role?: (string | null) | ArtistType;
  bio?: string | null;
  pfp?: (string | null) | Media;
  portfolio?:
    | {
        type?: ('Image' | 'Video (Embed)') | null;
        artwork?: (string | null) | Media;
        Video?: {
          artist?: string | null;
          /**
           * Change the 'play' part of the url to 'embed'
           */
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  x?: string | null;
  other?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  artist?: string | null;
  /**
   * 0(top)-100(bottom) position fit for images shown in portfolio, Default is 40
   */
  y?: number | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    Small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    Medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    Large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    Max?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "portfolio-list".
 */
export interface PortfolioList {
  id: string;
  name?: string | null;
  slug?: string | null;
  /**
   * Select image or video (recommended video format .webm)
   */
  mediaItems?:
    | {
        type?: ('Image' | 'Video (Embed)') | null;
        artwork?: (string | null) | Media;
        Video?: {
          artist?: string | null;
          /**
           * Change the 'play' part of the url to 'embed'
           */
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "priceList".
 */
export interface PriceList {
  id: string;
  name?: string | null;
  /**
   * The slug identifier for category from commission page to go here when clicked (prices page)
   */
  slug?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  image?: (string | null) | Media;
  /**
   * What category of portfolio will be shown when pressing view works
   */
  view?: (string | null) | PortfolioList;
  categories?:
    | {
        name?: string | null;
        items?:
          | {
              name?: string | null;
              price?: string | null;
              id?: string | null;
            }[]
          | null;
        addons?:
          | {
              name?: string | null;
              price?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'artist-type';
        value: string | ArtistType;
      } | null)
    | ({
        relationTo: 'members';
        value: string | Member;
      } | null)
    | ({
        relationTo: 'portfolio-list';
        value: string | PortfolioList;
      } | null)
    | ({
        relationTo: 'priceList';
        value: string | PriceList;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "artist-type_select".
 */
export interface ArtistTypeSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "members_select".
 */
export interface MembersSelect<T extends boolean = true> {
  name?: T;
  title?: T;
  order?: T;
  role?: T;
  bio?: T;
  pfp?: T;
  portfolio?:
    | T
    | {
        type?: T;
        artwork?: T;
        Video?:
          | T
          | {
              artist?: T;
              url?: T;
            };
        id?: T;
      };
  x?: T;
  other?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "portfolio-list_select".
 */
export interface PortfolioListSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  mediaItems?:
    | T
    | {
        type?: T;
        artwork?: T;
        Video?:
          | T
          | {
              artist?: T;
              url?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "priceList_select".
 */
export interface PriceListSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  image?: T;
  view?: T;
  categories?:
    | T
    | {
        name?: T;
        items?:
          | T
          | {
              name?: T;
              price?: T;
              id?: T;
            };
        addons?:
          | T
          | {
              name?: T;
              price?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  artist?: T;
  y?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        Small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        Medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        Large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        Max?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "general".
 */
export interface General {
  id: string;
  footer?: {
    h?: string | null;
    p?: string | null;
  };
  mail?: string | null;
  x?: string | null;
  discord?: string | null;
  cf?: string | null;
  af?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home".
 */
export interface Home {
  id: string;
  heroSection: {
    sh?: string | null;
    h?: string | null;
    p?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    ba?: {
      text?: string | null;
      /**
       * A path or url when the button is clicked (/home,/commissions,https://google.com)
       */
      path?: string | null;
    };
    bb?: {
      text?: string | null;
      /**
       * A path or url when the button is clicked (/home,/commissions,https://google.com)
       */
      path?: string | null;
    };
    leftArt: string | Media;
    rightArt: string | Media;
  };
  welcome?: {
    hn?: string | null;
    hb?: string | null;
    sh?: string | null;
    pa?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    pb?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    aa?: (string | null) | Media;
    ab?: (string | null) | Media;
    asa?: (string | null) | Media;
    asb?: (string | null) | Media;
  };
  vision?: {
    heading?: string | null;
    paragraph?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    background?: (string | null) | Media;
    button?: {
      text?: string | null;
      /**
       * A path or url when the button is clicked (/home,/commissions,https://google.com)
       */
      path?: string | null;
    };
  };
  featuredArtist?: {
    art?: (string | null) | Media;
    sh?: string | null;
    heading?: string | null;
    paragraph?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  featuredProjects?: {
    sh?: string | null;
    banner?: (string | null) | Media;
    h?: string | null;
    paragraph?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    projects?:
      | {
          type?: ('Image' | 'Video (Embed)') | null;
          size?: ('portrait' | 'landscape') | null;
          artwork?: (string | null) | Media;
          Video?: {
            artist?: string | null;
            /**
             * Change the 'play' part of the url to 'embed'
             */
            url?: string | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  testimonials?: {
    hidden?: boolean | null;
    sh?: string | null;
    h?: string | null;
    p?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    tlist?:
      | {
          testimony?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          name?: string | null;
          title?: string | null;
          pfp?: (string | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  invitation?: {
    hb?: string | null;
    hn?: string | null;
    ba?: {
      text?: string | null;
      /**
       * A path or url when the button is clicked (/home,/commissions,https://google.com)
       */
      path?: string | null;
    };
    bb?: {
      text?: string | null;
      /**
       * A path or url when the button is clicked (/home,/commissions,https://google.com)
       */
      path?: string | null;
    };
    bg?: (string | null) | Media;
    ia?: (string | null) | Media;
    ib?: (string | null) | Media;
    ic?: (string | null) | Media;
    imd?: (string | null) | Media;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "commission".
 */
export interface Commission {
  id: string;
  timeline?: {
    sh?: string | null;
    h?: string | null;
    p?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    steps?:
      | {
          title?: string | null;
          si?:
            | {
                title?: string | null;
                p?: {
                  root: {
                    type: string;
                    children: {
                      type: string;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                } | null;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  service?: {
    sh?: string | null;
    h?: string | null;
    steps?:
      | {
          title?: string | null;
          p?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          id?: string | null;
        }[]
      | null;
    cat?:
      | {
          title?: string | null;
          /**
           * When clicked it will go to the pricing with this same slug.
           */
          slug?: string | null;
          p?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          art?: (string | null) | Media;
          subcat?: string[] | null;
          id?: string | null;
        }[]
      | null;
  };
  pricing?: {
    Prices?: {
      sh?: string | null;
      h?: string | null;
      p?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      img?: (string | null) | Media;
    };
    nl?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    nr?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    pricing_list?: (string | PriceList)[] | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "artist-text".
 */
export interface ArtistText {
  id: string;
  sh?: string | null;
  h?: string | null;
  i?: (string | null) | Media;
  p?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  order: (string | ArtistType)[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "portfolio-text".
 */
export interface PortfolioText {
  id: string;
  sh?: string | null;
  h?: string | null;
  p?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  order?: (string | PortfolioList)[] | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact".
 */
export interface Contact {
  id: string;
  sh?: string | null;
  h?: string | null;
  p?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  il?:
    | {
        title?: string | null;
        info?: string | null;
        isLink?: boolean | null;
        id?: string | null;
      }[]
    | null;
  m?: string | null;
  st?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  sb?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "terms".
 */
export interface Term {
  id: string;
  banner?: (string | null) | Media;
  sh?: string | null;
  h?: string | null;
  p?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  tl?:
    | {
        title?: string | null;
        text?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "general_select".
 */
export interface GeneralSelect<T extends boolean = true> {
  footer?:
    | T
    | {
        h?: T;
        p?: T;
      };
  mail?: T;
  x?: T;
  discord?: T;
  cf?: T;
  af?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_select".
 */
export interface HomeSelect<T extends boolean = true> {
  heroSection?:
    | T
    | {
        sh?: T;
        h?: T;
        p?: T;
        ba?:
          | T
          | {
              text?: T;
              path?: T;
            };
        bb?:
          | T
          | {
              text?: T;
              path?: T;
            };
        leftArt?: T;
        rightArt?: T;
      };
  welcome?:
    | T
    | {
        hn?: T;
        hb?: T;
        sh?: T;
        pa?: T;
        pb?: T;
        aa?: T;
        ab?: T;
        asa?: T;
        asb?: T;
      };
  vision?:
    | T
    | {
        heading?: T;
        paragraph?: T;
        background?: T;
        button?:
          | T
          | {
              text?: T;
              path?: T;
            };
      };
  featuredArtist?:
    | T
    | {
        art?: T;
        sh?: T;
        heading?: T;
        paragraph?: T;
      };
  featuredProjects?:
    | T
    | {
        sh?: T;
        banner?: T;
        h?: T;
        paragraph?: T;
        projects?:
          | T
          | {
              type?: T;
              size?: T;
              artwork?: T;
              Video?:
                | T
                | {
                    artist?: T;
                    url?: T;
                  };
              id?: T;
            };
      };
  testimonials?:
    | T
    | {
        hidden?: T;
        sh?: T;
        h?: T;
        p?: T;
        tlist?:
          | T
          | {
              testimony?: T;
              name?: T;
              title?: T;
              pfp?: T;
              id?: T;
            };
      };
  invitation?:
    | T
    | {
        hb?: T;
        hn?: T;
        ba?:
          | T
          | {
              text?: T;
              path?: T;
            };
        bb?:
          | T
          | {
              text?: T;
              path?: T;
            };
        bg?: T;
        ia?: T;
        ib?: T;
        ic?: T;
        imd?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "commission_select".
 */
export interface CommissionSelect<T extends boolean = true> {
  timeline?:
    | T
    | {
        sh?: T;
        h?: T;
        p?: T;
        steps?:
          | T
          | {
              title?: T;
              si?:
                | T
                | {
                    title?: T;
                    p?: T;
                    id?: T;
                  };
              id?: T;
            };
      };
  service?:
    | T
    | {
        sh?: T;
        h?: T;
        steps?:
          | T
          | {
              title?: T;
              p?: T;
              id?: T;
            };
        cat?:
          | T
          | {
              title?: T;
              slug?: T;
              p?: T;
              art?: T;
              subcat?: T;
              id?: T;
            };
      };
  pricing?:
    | T
    | {
        Prices?:
          | T
          | {
              sh?: T;
              h?: T;
              p?: T;
              img?: T;
            };
        nl?: T;
        nr?: T;
        pricing_list?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "artist-text_select".
 */
export interface ArtistTextSelect<T extends boolean = true> {
  sh?: T;
  h?: T;
  i?: T;
  p?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "portfolio-text_select".
 */
export interface PortfolioTextSelect<T extends boolean = true> {
  sh?: T;
  h?: T;
  p?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact_select".
 */
export interface ContactSelect<T extends boolean = true> {
  sh?: T;
  h?: T;
  p?: T;
  il?:
    | T
    | {
        title?: T;
        info?: T;
        isLink?: T;
        id?: T;
      };
  m?: T;
  st?: T;
  sb?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "terms_select".
 */
export interface TermsSelect<T extends boolean = true> {
  banner?: T;
  sh?: T;
  h?: T;
  p?: T;
  tl?:
    | T
    | {
        title?: T;
        text?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}